#! /usr/bin/env lua

-- Copyright (C) 2015 Tomoyuki Fujimori <moyu@dromozoa.com>
--
-- This file is part of dromozoa-ubench.
--
-- dromozoa-ubench is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- dromozoa-ubench is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with dromozoa-ubench.  If not, see <http://www.gnu.org/licenses/>.

-- local json = require "dromozoa.json"
local run = require "dromozoa.ubench.run"

local column_metatable = {}

function column_metatable:__len()
  return #self._m
end

function column_metatable:__index(key)
  return self._m[key][self._j]
end

function column_metatable:__newindex(key, value)
  self._m[key][self._j] = value
end

local function column(m, j)
  return setmetatable({ _m = m; _j = j }, column_metatable)
end

local bench = {
  { "BASE", function ()
    local out = {}
    local n1, n2 = 1, 2
    return out
  end };
  { "4", function ()
    local out = {}
    local n1, n2 = 1, 2
    out = n1 + n2 out = n1 + n2 out = n1 + n2 out = n1 + n2
    return out
  end };
  { "8", function ()
    local out = {}
    local n1, n2 = 1, 2
    out = n1 + n2 out = n1 + n2 out = n1 + n2 out = n1 + n2
    out = n1 + n2 out = n1 + n2 out = n1 + n2 out = n1 + n2
    return out
  end };
  { "12", function ()
    local out = {}
    local n1, n2 = 1, 2
    out = n1 + n2 out = n1 + n2 out = n1 + n2 out = n1 + n2
    out = n1 + n2 out = n1 + n2 out = n1 + n2 out = n1 + n2
    out = n1 + n2 out = n1 + n2 out = n1 + n2 out = n1 + n2
    return out
  end };
  { "16", function ()
    local out = {}
    local n1, n2 = 1, 2
    out = n1 + n2 out = n1 + n2 out = n1 + n2 out = n1 + n2
    out = n1 + n2 out = n1 + n2 out = n1 + n2 out = n1 + n2
    out = n1 + n2 out = n1 + n2 out = n1 + n2 out = n1 + n2
    out = n1 + n2 out = n1 + n2 out = n1 + n2 out = n1 + n2
    return out
  end };
}

local result = run(column(bench, 2), 500, 1000)

for i = 1, #result do
  print(i, result[i][2])
end

--[[
os.exit()

local name = ...
local ubench = require(name)

local result = {}
for i = 1, #ubench do
  local v = ubench[i]
  local s, a = run(1000, 1000, v[2])
  io.stderr:write(i, "\n")
  result[#result + 1] = { v[1], s, a, v[3] }
end
io.write(json.encode(result), "\n")
]]
